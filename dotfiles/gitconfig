[apply]
    whitespace = fix
[branch]
    autosetupmerge = true
    autosetuprebase = remote
[color]
    ui = auto
[color "diff"]
    whitespace = red reverse
[core]
    editor = vim
    pager = less -+$LESS -FRSXi
    autocrlf = input
    excludesfile = ~/.gitignore
    safecrlf = warn
[diff]
    renames = copies
    #guitool = p4merge
    algorithm = patience
    indentHeuristic = true
[format]
    subjectprefix = PATCH
    suffix = .patch.txt
    numbered = true
    #attach = true
    inline = true
[merge]
    tool = vimdiff3
[sendemail]
    smtpserver = /opt/local/bin/msmtp
    suppressfrom = true
    chainreplyto = false
    thread = true
    confirm = auto
[user]
    name = elij
    email = elij@wundrd.net
[push]
    #default = tracking
    default = simple
[mergetool "vimdiff3"]
    cmd = vim -f -d -c \"wincmd J\" \"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"
[mergetool "gvimdiff3"]
    cmd = gvim -f -d -c \"wincmd J\" \"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"
[alias]
    co = checkout
    br = branch -vv
    st = status -sb
    tags = tag --sort="version:refname" -l
    branches = branch -a
    remotes = remote -v
    unstage = reset HEAD
    wdiff = diff --color-words
    wshow = show --color-words
    list-unmerged = ls-files -u
    ls-unmerged = ls-files -u
    type = cat-file -t
    dump = cat-file -p
    qlog = log --pretty=oneline --abbrev-commit --graph --decorate
    lg = log --graph --pretty=format:'%Cred%h%Creset - %Cgreen%ad%Creset |%C(yellow)%d%Creset %s [%an]' --abbrev-commit --date=short
    lga = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative --branches --remotes
    # add all changed (but not new) files to stage (index):
    au = add -u
    # prune all tracking local branches that have been removed from remote:
    prune-all = !git remote | xargs -n 1 git remote prune
    # show list of contributors in descending order by number of commits
    rank = shortlog -sn --no-merges
    # given a string for an author, try to figure out full name and email:
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
    # given any git object, try to show it briefly
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
    count = shortlog -sn
    amend = commit --amend -C HEAD
    # sets head's author as someone else
    # git credit 'Joe User' 'joe@example.com'
    credit = commit --amend --author "$1 <$2>" -C HEAD
    diff-word = diff --word-diff
    diff-stat = diff --stat
    diff-patience = diff --patience
    show-patience = show --patience
    #lost-found = fsck --lost-found
    assume   = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed  = "!git ls-files -v | grep ^h | cut -c 3-"
    ours   = "!f() { git checkout --ours $@ && git add $@; }; f"
    theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
    fixup = !sh -c 'git commit --fixup=$1' -
    squash = !sh -c 'git commit --squash=$1' -
[rerere]
    enabled = 1
[grep]
    fullname = true
# check that anything being pulled/fetched/etc, is complete and sane
[transfer]
        fsckobjects = true
[fetch]
        fsckobjects = true
[receive]
        fsckObjects = true
[pager]
	branch = less -+$LESS -FRXi
	tag = less -+$LESS -FRXi

[includeIf "gitdir:~/projects/starcard/"]
    path = ~/projects/starcard/.gitconfig
[includeIf "gitdir:~/projects/starcard/tcomm-**"]
    path = ~/projects/firstfoundry/.gitconfig
